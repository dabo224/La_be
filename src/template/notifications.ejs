<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mes notifications</title>

  <style>
    :root{
      --bg: #f5f7fb;
      --card: #ffffff;
      --text: #0f172a;
      --muted: #64748b;
      --primary: #2563eb;       /* bleu pro */
      --primary-600:#1d4ed8;
      --success:#16a34a;
      --danger:#dc2626;
      --ring: rgba(37, 99, 235, .35);
      --shadow: 0 6px 24px rgba(2, 6, 23, .08);
      --radius: 14px;
    }
    @media (prefers-color-scheme: dark){
      :root{
        --bg: #0b1220;
        --card:#0f172a;
        --text:#e5e7eb;
        --muted:#94a3b8;
        --primary:#3b82f6;
        --primary-600:#2563eb;
        --success:#22c55e;
        --danger:#ef4444;
        --ring: rgba(59,130,246,.35);
        --shadow: 0 12px 40px rgba(0,0,0,.35);
      }
    }

    *{ box-sizing: border-box }
    html,body{ height:100% }
    body{
      margin:0;
      font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      color: var(--text);
      background: radial-gradient(1000px 800px at 10% -10%, #e2e8f0 0%, transparent 40%) no-repeat,
                  radial-gradient(1000px 800px at 110% 0%, #e0e7ff 0%, transparent 40%) no-repeat,
                  var(--bg);
      background-attachment: fixed;
      line-height: 1.45;
    }

    /* Layout */
    .page{
      display:flex;
      flex-direction: column;
      min-height:100dvh;
    }
    .container{
      width: min(1100px, 92vw);
      margin: 72px auto 48px;
    }

    /* Header local */
    .page-title{
      display:flex;
      align-items:center;
      gap: 12px;
      margin: 8px 0 18px;
    }
    .page-title h1{
      font-size: clamp(1.25rem, 1.1rem + 1vw, 1.75rem);
      margin:0;
      letter-spacing:.2px;
    }
    .subtitle{
      color: var(--muted);
      margin: 0 0 22px 0;
      font-size: .975rem;
    }

    /* Card liste */
    .notif-list{
      display:grid;
      grid-template-columns: repeat(auto-fill, minmax(290px, 1fr));
      gap: 16px;
    }

    .notif-card{
      background: var(--card);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      border: 1px solid rgba(15, 23, 42, .06);
      padding: 14px;
      display:grid;
      grid-template-columns: 56px 1fr;
      grid-template-areas:
        "avatar content"
        "avatar actions";
      column-gap: 14px;
      row-gap: 10px;
      transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease;
    }
    .notif-card:hover{
      transform: translateY(-2px);
      box-shadow: 0 14px 40px rgba(2, 6, 23, .12);
      border-color: rgba(37, 99, 235, .18);
    }

    .avatar{
      grid-area: avatar;
      width: 56px;
      height: 56px;
      border-radius: 50%;
      object-fit: cover;
      border: 3px solid rgba(37,99,235,.18);
      background:#e2e8f0;
    }

    .content{
      grid-area: content;
      display:flex;
      flex-direction: column;
      gap: 6px;
      min-width:0;
    }
    .content .date{
      font-size: .85rem;
      color: var(--muted);
    }
    .content .text{
      font-weight: 600;
      font-size: .98rem;
    }

    .actions{
      grid-area: actions;
      display:grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 8px;
      align-self: start;
    }

    /* Boutons */
    .btn{
      appearance: none;
      border: none;
      border-radius: 10px;
      padding: 10px 12px;
      font-weight: 600;
      font-size: .95rem;
      cursor: pointer;
      transition: transform .08s ease, box-shadow .18s ease, background-color .2s ease, color .2s ease, opacity .2s ease;
      outline: none;
    }
    .btn:active{ transform: translateY(1px) }
    .btn:focus-visible{
      box-shadow: 0 0 0 4px var(--ring);
    }

    .btn-primary{
      background: linear-gradient(180deg, var(--primary), var(--primary-600));
      color: #fff;
    }
    .btn-primary:hover{ filter: brightness(1.05) }

    .btn-success{
      background: linear-gradient(180deg, var(--success), #15803d);
      color: #fff;
    }
    .btn-success:hover{ filter: brightness(1.05) }

    .btn-danger{
      background: linear-gradient(180deg, var(--danger), #b91c1c);
      color: #fff;
    }
    .btn-danger:hover{ filter: brightness(1.03) }

    .btn-ghost{
      background: rgba(15, 23, 42, .05);
      color: var(--text);
    }
    @media (prefers-color-scheme: dark){
      .btn-ghost{ background: rgba(255,255,255,.06) }
    }
    .btn-ghost:hover{ background: rgba(2,6,23,.12) }

    /* Barre sticky optionnelle (si besoin) */
    .toolbar{
      position: sticky;
      top: 64px; /* laisse passer ton header */
      z-index: 10;
      background: color-mix(in lab, var(--card) 88%, transparent);
      backdrop-filter: saturate(1.2) blur(8px);
      border: 1px solid rgba(15,23,42,.06);
      box-shadow: var(--shadow);
      border-radius: 12px;
      padding: 10px 12px;
      margin-bottom: 16px;
      display:flex;
      gap: 8px;
      flex-wrap: wrap;
    }
    .chip{
      border: 1px solid rgba(15,23,42,.12);
      background: var(--card);
      color: var(--muted);
      padding: 8px 12px;
      border-radius: 999px;
      font-weight: 600;
      cursor: pointer;
    }
    .chip.active{
      color: #fff;
      background: var(--primary);
      border-color: transparent;
    }

    /* Utilitaires */
    .visually-hidden{
      position: absolute !important;
      height: 1px; width: 1px;
      overflow: hidden;
      clip: rect(1px, 1px, 1px, 1px);
      white-space: nowrap;
    }
  </style>
</head>
<body>
  <%- include('./partials/header') %>

  <div class="page">
    <main class="container">

      <div class="page-title" aria-live="polite">
        <h1>Mes notifications</h1>
      </div>
      <p class="subtitle">Gère tes demandes d’amis en un clin d’œil.</p>

      <!-- Filtres (optionnels). Garde la classe .toolbar si tu veux les animer plus tard -->
      <!--
      <div class="toolbar" id="toolbar">
        <button class="chip active" data-filter="all">Toutes</button>
        <button class="chip" data-filter="received">Reçues</button>
        <button class="chip" data-filter="sent">Envoyées</button>
      </div>
      -->

      <section class="notif-list" aria-label="Liste des notifications">
        <% user.Envoi.forEach(notif => { %>
          <article class="notif-card" data-notif-id="<%= notif.id %>">
            <img class="avatar" src="../static/profil/<%= notif.User.Profil.urlPhoto %>" alt="Photo de <%= notif.User.prenom %> <%= notif.User.nom %>">

            <div class="content">
              <p class="date data-createdAt" data-createdAt="<%= notif.createdAt %>"></p>

              <% if (notif.contenu == 1) { %>
                <p class="text">Demande reçue de <%= notif.User.prenom %> <%= notif.User.nom %></p>
              <% } else { %>
                <p class="text">Demande envoyée à <%= notif.User.prenom %> <%= notif.User.nom %></p>
              <% } %>
            </div>

            <div class="actions" data-notifId="<%= notif.id %>">
              <% if (notif.contenu == 1) { %>
                <button class="btn btn-success accept" data-senderId="<%= notif.senderId %>" data-userId="<%= notif.userId %>">
                  Accepter
                </button>
                <button class="btn btn-danger decline">
                  Refuser
                </button>
              <% } else { %>
                <button class="btn btn-ghost annuler_demande" data-notifId ="<%= notif.id %>">
                  Annuler
                </button>
                <button class="btn btn-danger supp" data-notifId ="<%= notif.id %>">
                  Supprimer
                </button>
              <% } %>
            </div>
          </article>
        <% }) %>
      </section>

    </main>
  </div>

  <script>
    // -------- Helpers
    const $ = (sel, ctx=document) => ctx.querySelector(sel);
    const $$ = (sel, ctx=document) => Array.from(ctx.querySelectorAll(sel));

    // -------- Affichage de la date (FR)
    $$('.data-createdAt').forEach(el => {
      const raw = el.getAttribute('data-createdAt');
      const d = new Date(raw);
      el.textContent = d.toLocaleString('fr-FR', {
        day:'2-digit',
        month:'long',
        year:'numeric',
        hour:'2-digit',
        minute:'2-digit'
      });
    });

    // -------- Actions
    // Accepter
    $$('.accept').forEach(btn => {
      btn.addEventListener('click', async () => {
        btn.disabled = true;
        const notifWrap = btn.closest('.actions');
        const notifId = notifWrap.getAttribute('data-notifId');

        try{
          const res = await fetch('/friend', {
            method:'POST',
            headers: { 'Content-Type':'application/json' },
            body: JSON.stringify({ friendId: btn.getAttribute('data-senderId'), userId: decode().userId })
          });
          const data = await res.json();
          if(data.friend){
            // Supprime la carte
            const card = btn.closest('.notif-card');
            card?.parentElement?.removeChild(card);
            // Nettoie la notif
            await fetch(`/notif/${notifId}?all=true`, { method:'DELETE' });
            alert("Demande d'amis acceptée avec succès");
          }
        } catch(e){
          console.error(e);
          btn.disabled = false;
        }
      });
    });

    // Refuser
    $$('.decline').forEach(btn => {
      btn.addEventListener('click', async () => {
        btn.disabled = true;
        const notifId = btn.closest('.actions').getAttribute('data-notifId');
        try{
          const res = await fetch(`/notif/${notifId}`, { method:'DELETE' });
          const data = await res.json();
          if(data.delete){
            const card = btn.closest('.notif-card');
            card?.parentElement?.removeChild(card);
          }
        } catch(e){
          console.error(e);
          btn.disabled = false;
        }
      });
    });

    // Annuler (pour les demandes envoyées)
    $$('.annuler_demande').forEach(btn => {
      btn.addEventListener('click', async () => {
        btn.disabled = true;
        try{
          const res = await fetch(`/notif/${btn.getAttribute('data-notifId')}?all=true`, { method:'DELETE' });
          const data = await res.json();
          if(data.delete){
            const card = btn.closest('.notif-card');
            card?.parentElement?.removeChild(card);
          }
        } catch(e){
          console.error(e);
          btn.disabled = false;
        }
      });
    });

    // Supprimer
    $$('.supp').forEach(btn => {
      btn.addEventListener('click', async () => {
        btn.disabled = true;
        try{
          const res = await fetch(`/notif/${btn.getAttribute('data-notifId')}`, { method:'DELETE' });
          const data = await res.json();
          if(data.delete){
            const card = btn.closest('.notif-card');
            card?.parentElement?.removeChild(card);
          }
        } catch(e){
          console.error(e);
          btn.disabled = false;
        }
      });
    });
  </script>
</body>
</html>
